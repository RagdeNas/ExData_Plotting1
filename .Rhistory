ls()
x<-9
ls()
dir()
?list.files
args(list.files())
args(list.files
)
old.dir <-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("myTest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R","folder1", "folder2")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
getwd()
setwd(old.dir)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect> 6
num_vect>= 6
my_char<-c("My" , "name", "is")
my_char
paste(my_char, collapse = " ")
my_name<-paste(c(my_char, "Edgar"), collapse = " ")
my_name<-c(my_char, "Edgar")
my_name
paste(my_name, collapse = " ")
paste("hello", "world!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep = "")
paste(c(a:z),1:4, sep = "-")
paste(LETTERS,1:4, sep = "-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <-c(11,2,NA)
names(vect) <-c("foo", "bar", "norf")
names(vect2) <-c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2<-matric(1:20, 4, 5)
my_matrix2<-matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients<-c("Bill". "Gina", "Kelly", "Sean")
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind( patients, my_matrix)
my_data<-data.frame(patients, my_matrix )
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data)<-cnames
my_data
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply( flags, class )
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply( flags, class)
cls_vect <- sapply( flags, class)
class( cls_vect )
sum( flags$orange )
flag_colors <- flags[ ,11:17]
head(flag_colors, 6)
head(flag_colors)
lapply( flag_colors, sum)
sapply( flag_colors, sum)
sapply( flag_colors, mean )
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class( shape_mat)
unique( c(3,4,5,5,5,6,6))
unique_vals <- lapply( flags, unique )
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply( unique_vals, funcion(elem) elem(2))
lapply( unique_vals, funcion(elem) elem[2])
lapply( unique_vals, function(elem) elem[2])
q()
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply( flags, class, character(1))
?tapply(vector, index, function)
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$landmass, flags$animate, mean )
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
head(flags)
library(datasets)
data("iris")
viewinfo(iris)
viewinfo("iris")
?iris
mean(Sepal.Length)
mean(iris$Sepal.Length)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
data("mtcars")
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
apply( mtcars, 2, mean)
sapply( split( mtcars$mpg, mtcars$cyl), mean)
mean( mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean) )
split(mtcars, mtcars$cyl)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean) )
26.66-15.10
?round
round(11.56 )
debug(ls)
ls
ls
<'ls'
?ls
ls()
q
iris
Q
q()
library(datasets)
data("iris")
iris
lapply(iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, mean)
sapply(iris$Sepal.Length, mean)
mean(iris$Sepal.Length)
round(mean(iris$Sepal.Length))
?iris
tapply(iris$Sepal.Length, iris$Species, mean)
round(6.588)
apply(iris[,1:4],2,mean)
?apply
apply(iris, 1, mean)
apply(iris, 2, mean)
apply(iris[,1:4], 1, mean)
colMeans(iris)
rowMeans(iris[,1:4])
library(datasets)
data("mtcars")
mtcars
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
26.66-15.1
with(mtcars, tapply(hp, cyl, mean))
209.2142-82.6363
round(209.2142-82.6363)
library(datasets)
viewInfo( datasets)
str(attitude)
str(bjsales)
str(Bjsales)
str(airmiles)
set.seed(1)
rpois(5,2)
rnorm?
q
?rnorm
?ppois
set.seed(10)
x<-rep(0:1,each=5)
e<-rnorm(10,0,20)
y <- 0.5 + 2 * x + e
library(datasets)
Rprof()
fit <-lm(y-x1+x2)
Rprof(NULL)
Rprof()
fit <-lm(y-x1+x2)
Rprof()
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncl(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:10)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), prob=c(0.3,0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1,size = 100, prob = 0.7)
flips2 <- rbinom(100,size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot( x=cars$speed, y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot( x=cars$speed, y=cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot( cars, main="My Plot")
plot( cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot( cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
play()
str(mtcars)
head(mtcars)
nxt()
?boxplot
boxplot(data=mtcars, formula=mpg~cyl)
boxplot(mtcars, formula=mpg~cyl)
boxplot(formula=mpg~cyl, data=)
boxplot(formula=mpg~cyl, data=mtcars)
hist(mtcars$mpg)
plot(1:10,pch = c("@","$","#","&","%"),main = "Sarge says to Beetle...")
library(swirl)
swirl()
View(pollution)
View(pollution)
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = )
boxplot(ppm, col = 2)
boxplot(ppm, col = "blue")
abline(h=12)
hist( ppm, col="green")
rug( ppm )
low
high
hist( ppm, col="green", breaks = 100)
rug(ppm)
hist( ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
table(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot( reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm24~region, data = "pollution", col="red")
boxplot(pm24~region, data = pollution, col="red")
boxplot(pm25~region, data = pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(east$25, col="green")
hist(east$pm25, col="green")
hist( (subset(pollution, region=="west"))$pm25, col="green" )
hist( subset(pollution, region=="west")$pm25, col="green" )
call(plot, )
plot( pollution)
with(pollution, plot( lattitude, pm25))
with(pollution, plot( latitude, pm25))
abline(h = 12, lwd=2, lty=2)
plot( pollution$latitude, pollution$pm25, col= pollution$region)
plot( pollution$latitude, ppm, col= pollution$region)
abline(h = 12, lwd=2, lty=2)
par( mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region="west")
west <- subset(pollution, region=="west")
plot( west$latitude, west$pm25, main="West" )
plot( east$latitude, east$pm25, main="East" )
?Devices
plot( faithful$eruptions, faithful$waiting )
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
setwd("~/Documents/Courses/Data Science/ExploratoryAnalysis/Week 1")
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with( cars, plot( speed, dist))
text( mean(cars$speed), max(cars$dist), "SWIRL rules!"  )
head(state
)
table(state$region)
xyplot(Life.Exp~Income, state, c(4,1))
xyplot(Life.Exp~Income|region, state, c(4,1))
xyplot(Life.Exp~Income|region, data=state, layout=c(4,1))
xyplot(Life.Exp~Income|region, data=state, layout=c(2,2))
head(mpg)
dim( mpg)
table(mpg$model)
ggplot2(displ, hwy, data=)
ggplot2(displ, hwy, data=mpg)
gplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range( airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red", main="Ozone and Wind in New York City")
title( main="Ozone and Wind in New York City")
with( airquality, plot( Wind, Ozone ))
title( main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot( airquality$Wind, airquality$Ozone)
plot( airquality$Wind, airquality$Ozone, type="n")
plot( airquality$Wind, airquality$Ozone, type="n", main="Wind and Ozone in NYC")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Months==5)
may <- subset(airquality, Month==5)
View(cars)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset( airquality, Month<>5 )
notmay <- subset( airquality, Month != 5 )
points( notmay$Wind, notmay$Ozone, col="red", pch=8)
legend( "topright", pch=c(17,8), col=c("blue","red"), legend=("May", "Other Months") )
legend( "topright", pch=c(17,8), col=c("blue","red"), legend=c("May", "Other Months") )
abline(mean(airquality$Wind), lty=2, lwd=2)
abline(mean(airquality$Wind, lty=2, lwd=2)
abline(mean(v=airquality$Wind), lty=2, lwd=2)
abline(v=mean(airquality$Wind), lty=2, lwd=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par( mfrow=c(1,2) )
plot( airquality$Wind )
plot( airquality$Wind , airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par( mfrow = c(1,3) , mar=c(4,4,2,1) , oma=c(0,0,2,0) )
plot( airquality$Wind , airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot( airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext( "Ozone and Weather in New York City" , outer=TRUE )
?postscript
powerconsumption <- read.delim("../household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
setwd("~/Documents/Courses/Data Science/ExploratoryAnalysis/Week 1/Assignment/ExData_Plotting1")
powerconsumption <- read.delim("../household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
head(powerconsumption, 20)
table(powerconsumption$Date)
?fread
?read.delim
?read.delim2
install.packages("sqldf")
library(sqldf)
rm(ls())
ls()
?rm
remove(ls())
remove()<-ls()
rm(list=ls())
pwrconsumption <- read.csv.sql("../household_power_consumption.txt", header = TRUE, sql = "select * from file where Date='1/1/2007'", sep=";")
View(pwrconsumption)
pwrconsumption <- read.csv.sql("../household_power_consumption.txt", header = TRUE, sql = "select * from file where Date='1/2/2007' or Date='2/2/2017'", sep=";")
rm(list=ls())
pwrconsumption <- read.csv.sql("../household_power_consumption.txt", header = TRUE, sql = "select * from file where Date='1/2/2007' or Date='2/2/2017'", sep=";")
table(pwrconsumption$Date)
rm(list=ls())
pwrconsumption <- read.csv.sql("../household_power_consumption.txt", header = TRUE, sql = "select * from file where Date='1/2/2007' or Date='2/2/2007'", sep=";")
table(pwrconsumption$Date)
head(pwrconsumption)
hist( pwrconsumption$Global_active_power, col="red" )
hist( pwrconsumption$Global_active_power, col="red" , main="Global Active Power", xlab = "Global Active Power (kilowatts)")
plot.new
plot.new()
hist( pwrconsumption$Global_active_power, col="red" , main="Global Active Power", xlab = "Global Active Power (kilowatts)")
dev.off()
plot.new()
hist( pwrconsumption$Global_active_power, col="red" , main="Global Active Power", xlab = "Global Active Power (kilowatts)")
source("plot1.R")
source("plot1.R")
source("plot1.R")
head(pwrconsumption)
source("plot1.R")
source("plot1.R")
source("plot1.R")
?file
?read.csv.sql
file_conn <- file("../household_power_consumption.txt")
pwrconsumption <- read.csv.sql(file_conn, header = TRUE, sql = "select * from file where Date='1/2/2007' or Date='2/2/2007'", sep=";")
pwrconsumption <- read.csv.sql(file=file_conn, header = TRUE, sql = "select * from file where Date='1/2/2007' or Date='2/2/2007'", sep=";")
pwrconsumption <- read.csv.sql("../household_power_consumption.txt", header = TRUE, sql = "select * from file where Date='1/2/2007' or Date='2/2/2007'", sep=";")
close("pwrconsumption")
close(pwrconsumption)
close(file_conn)
head(pwrconsumption)
